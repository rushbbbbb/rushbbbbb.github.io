* proc file-system lab
** Reference
- http://coffeenix.net/doc/kernel/startup.html/x72.html#START-KERNEL--FIG
- https://elixir.bootlin.com/linux/latest/source
- https://medium.com/@boutnaru/linux-kernel-task-struct-829f51d97275
- https://elixir.bootlin.com/linux/v6.2-rc1/source/include/linux/sched.h#L737
- https://www.stackscale.com/blog/inodes-linux/#Metadata_stored_in_an_inode

- man pahole

** Answer the questions



*** start_kernel();

it orchestrates all of Linux's startup procedure

*** init();



*** struct task_struct;

“task_struct” holds the data an operating system needs about a specific process.
Among those data elements are: credentials ,priority, PID (process ID), PPID (parent process ID), list of open resources, memory space range information, namespace information

*** struct inode;

stores information about a file or directory.Inodes contain metadata about the file or directory, including:
- File type
- File size
- Owner ID
- Group ID
- Read, write and execute permissions
- Last access time
- Last change time
- Last modification time

*** struct file;
*** fork();
*** include/asm-generic/unistd.h
*** arch/x86_64/entry.S
*** kernel/printk.c

#+begin_src text
Commod 'ps' report a snapshot of the current processes.
Commod 'head -2' and 'tail -1' get the first process --- bash.
Commod 'cut -f5 -d' '' get the first fields --- PID of bash
#+end_src
So we can make it simply : *cd //proc//[PID of bash] && ls -l*
The purpose of this command is to enter the //proc//[PID of bash] directory and list the detailed contents of the folder.
